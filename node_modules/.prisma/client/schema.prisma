generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enumerações para papéis de usuário, tipos e status de manutenção
enum UserRole {
  ADMIN
  MECHANIC
  RECEPTIONIST
}

enum VehicleType {
  CAR
  MOTORCYCLE
  TRUCK
  VAN
}

enum MaintenanceStatus {
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum MaintenanceType {
  PREVENTIVE
  CORRECTIVE
  INSPECTION
}

// Modelo de usuário
model User {
  id           String        @id @default(uuid())
  name         String
  email        String        @unique
  password     String
  role         UserRole      @default(MECHANIC)
  phone        String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  maintenances Maintenance[] @relation("MechanicMaintenances")
  vehicles     Vehicle[]     @relation("UserVehicles")

  @@map("users")
}

// Modelo de veículo
model Vehicle {
  id           String        @id @default(uuid())
  brand        String
  model        String
  year         Int
  licensePlate String        @unique
  type         VehicleType
  ownerId      String
  owner        User          @relation("UserVehicles", fields: [ownerId], references: [id])
  maintenances Maintenance[] @relation("VehicleMaintenances")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@map("vehicles")
}

// Modelo de manutenção
model Maintenance {
  id            String            @id @default(uuid())
  vehicleId     String
  vehicle       Vehicle           @relation("VehicleMaintenances", fields: [vehicleId], references: [id])
  mechanicId    String
  mechanic      User              @relation("MechanicMaintenances", fields: [mechanicId], references: [id])
  type          MaintenanceType
  status        MaintenanceStatus @default(SCHEDULED)
  description   String
  scheduledDate DateTime
  completedDate DateTime?
  cost          Float?
  notes         String?
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt

  @@map("maintenances")
}

// Modelo de serviço
model Service {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Float
  duration    Int // Duração em minutos
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("services")
}

// Adicione outros modelos abaixo conforme necessário
